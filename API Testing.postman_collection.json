{
	"info": {
		"_postman_id": "6f3abb1a-318f-4bc0-a5c7-50f4a6fe0a05",
		"name": "API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24935670"
	},
	"item": [
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response has user information\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData).to.have.property(\"id\");\r",
							"  pm.expect(jsonData.name).to.eql(\"John Doe\");\r",
							"  pm.expect(jsonData.email).to.eql(\"johndoe@example.com\");\r",
							"  pm.expect(jsonData.age).to.eql(30);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@example.com\",\n  \"age\": 30\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/api/users",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@example.com\",\n  \"age\": 30\n}"
						},
						"url": {
							"raw": "https://exampleapi.com/api/users",
							"protocol": "https",
							"host": [
								"exampleapi",
								"com"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\n  \"id\": 1,\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@example.com\",\n  \"age\": 30\n}"
				}
			]
		},
		{
			"name": "Get User by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response has correct user information\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.id).to.eql(1);\r",
							"  pm.expect(jsonData.name).to.eql(\"John Doe\");\r",
							"  pm.expect(jsonData.email).to.eql(\"johndoe@example.com\");\r",
							"  pm.expect(jsonData.age).to.eql(30);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/api/users/:id",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"api",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://exampleapi.com/api/users/1",
							"protocol": "https",
							"host": [
								"exampleapi",
								"com"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\n  \"id\": 1,\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@example.com\",\n  \"age\": 30\n}"
				}
			]
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response has updated user information\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.id).to.eql(1);\r",
							"  pm.expect(jsonData.name).to.eql(\"Jane Doe\");\r",
							"  pm.expect(jsonData.email).to.eql(\"janedoe@example.com\");\r",
							"  pm.expect(jsonData.age).to.eql(32);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Jane Doe\",\n  \"email\": \"janedoe@example.com\",\n  \"age\": 32\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/api/users/:id",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"api",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": [
				{
					"name": "Example Response",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Jane Doe\",\n  \"email\": \"janedoe@example.com\",\n  \"age\": 32\n}"
						},
						"url": {
							"raw": "https://exampleapi.com/api/users/1",
							"protocol": "https",
							"host": [
								"exampleapi",
								"com"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\n  \"id\": 1,\n  \"name\": \"Jane Doe\",\n  \"email\": \"janedoe@example.com\",\n  \"age\": 32\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseURL",
			"value": "https://exampleapi.com",
			"type": "string"
		}
	]
}